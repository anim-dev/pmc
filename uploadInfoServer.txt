services:
  web:
    image: myapp:latest
    environment:
      - UPLOAD_DIR=/app/uploads
    volumes:
      - ./data/uploads:/app/uploads    # host-dir : container-dir


sudo mkdir -p /var/lib/myapp/uploads
sudo chown -R myappuser:myappgroup /var/lib/myapp/uploads
sudo chmod -R 750 /var/lib/myapp/uploads


// app.ts
import express from "express";
import path from "path";

const app = express();
const uploadDir = process.env.UPLOAD_DIR ?? path.join(process.cwd(), "public", "uploads");

// serve static
app.use("/uploads", express.static(uploadDir, { index: false, extensions: ["jpg","png","pdf"] }));


----------------------------------

Old-package
"scripts": {
    "dev:compile:watch": "cross-env NODE_ENV=development tsx watch src/server.ts",
    "dist:prod": "cross-env NODE_ENV=production npx tsc",
    "prod:build": "cross-env NODE_ENV=production npx tsc && node dist/server.js",
    "prod:watch:compile": "cross-env NODE_ENV=production tsc --watch",
    "prod:watch:run": "cross-env NODE_ENV=production node --watch dist/server.js",
    "migrate:dev": "npx prisma migrate  dev --name init",
    "migrate:prod": "npx prisma migrate deploy"
  },

  new
   "scripts": {
    "dev:compile:watch": "tsx watch src/server.ts",
    "dist:prod": "npx tsc",
    "prod:build": "npx tsc && node dist/server.js",
    "prod:watch:compile": "tsc --watch",
    "prod:watch:run": "node --watch dist/server.js",
    "migrate:dev": "npx prisma migrate dev --name init",
    "migrate:prod": "npx prisma migrate deploy"
  },

  script_chang: "prod:watch:run": "tsx --watch dist/server.js",